openapi: 3.0.3
info:
  title: Endpoint Documentation example üìù
  description: |-
    ‚û°This is a sample api documentation where you can find some of the requirements for making api description with the following content:
    
    - A get request example to this url (https://api.sampleapis.com/beers) with this specification:
      * Route to hit the endpoint
      * Parameters required for the request
      * Expected response status codes
      * Expected response body format for all the posible status codes
      
    - A post request example to this url (https://reqbin.com/echo/post) with this specification:\
      * Route to hit the endpoint
      * Parameters required for the request
      * Expected request body to do the post request
      * Expected response status codes
      * Expected response body format for all the posible status codes
      
  

  version: 1.0.11
servers:
  - url: https://api.sampleapis.com/beers
  - url: https://reqbin.com/echo/post
tags:
  - name: get-request
    description: Sample documentation for a get request
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: post-example
    description: Sample documention for a post request
paths:
  /ale/{beerId}:
    get:
      tags:
        - get-request
      summary: Find any "ale" beer by ID
      description: Returns a single beer
      operationId: getAleBeerById
      parameters:
        - name: beerId
          in: path
          description: ID of the beer to be returned
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Beer not found

  /json:
    post:
      tags:
        - post-example
      summary: Make a post request to the given endpoint
      description: Make a post request with a json body and returns a json with the request result
      operationId: makePostRequest
      requestBody:
        description: Create any json body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sample-Body'

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok-Status-Body'
            application/xml:
              schema:
                $ref: '#/components/schemas/Failure-Status-Body'
        '400':
          description: bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Failure-Status-Body'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Failure-Status-Body'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Failure-Status-Body"
          
  
components:
  schemas:
    
    Rating:
      type: object
      properties:
        average:
          type: number
          example: 4.411243509154233
        reviews:
          type: number
          example: 453
      xml:
        name: category
    
    Beer:
      required:
        - id
      properties:
        price:
          type: string
          example: "$16.99"
        name:
          type: string
          example: Founders All Day IPA
        rating:
          $ref: '#/components/schemas/Rating'
        image:
          type: string
          example: https://www.totalwine.com/media/sys_master/twmmedia/h00/h94/11891416367134.png
      xml:
        name: Beer

    Sample-Body:
      properties:
        any-property:
          type: string
          example: "a random property"
          
    Ok-Status-Body:
      properties:
        success: 
          type: string
          example: "true"
    
    Failure-Status-Body:
      properties:
        success:
          type: string
          example: "false"